<script>
    require([
        "jquery",
        "Magento_Ui/js/modal/modal",
        'mage/backend/notification',
        "prototype"
    ], function (jQuery, modal, notification) {

//<![CDATA[
        Window.keepMultiModalWindow = true;
        var reporterGenerateModal = {
            overlayShowEffectOptions: null,
            overlayHideEffectOptions: null,
            modal: null,
            open: function (viewUrl, elementId) {
                if (viewUrl && elementId) {
                    jQuery.ajax({
                        url: viewUrl,
                        data: {
                            id: elementId
                        },
                        showLoader: true,
                        dataType: 'html',
                        success: function (data, textStatus, transport) {
                            this.openDialogWindow(data, elementId);
                        }.bind(this)
                    });
                }
            },
            openDialogWindow: function (data, elementId) {
                var self = this;
                if (this.modal) {
                    this.modal.html(jQuery(data).html());
                } else {
                    this.modal = jQuery(data).modal({
                        title: '<?= /* @escapeNotVerified */ __('Generate Report'); ?>',
                        modalClass: 'magento',
                        type: 'slide',
                        firedElementId: elementId,
                        buttons: [
                            {
                                text: jQuery.mage.__('Close'),
                                class: 'action- scalable back',
                                click: function () {
                                    self.closeDialogWindow(this);
                                }
                            },
                            {
                                text: jQuery.mage.__('Generate & Download'),
                                class: 'action-primary ',
                                click: function () {
                                    jQuery('body').trigger('processStart');
                                    var logContainer = jQuery('.log-container');
                                    logContainer.removeClass('success');
                                    logContainer.removeClass('error');

                                    var generetaReportForm = jQuery('#generate-report-form');
                                    var data = generetaReportForm.serialize();
                                    jQuery.ajax({
                                        type: generetaReportForm.attr('method'), // define the type of HTTP verb we want to use (POST for our form)
                                        url: generetaReportForm.attr('action'), // the url where we want to POST
                                        data: data, // our data object
                                        encode: true
                                    }).done(function (data) {
                                        var oneStepData = data;
                                        fetch(oneStepData.exportFile)
                                            .then(resp => resp.blob())
                                            .then(blob => {
                                                const url = window.URL.createObjectURL(blob);
                                                const a = document.createElement('a');
                                                a.style.display = 'none';
                                                a.href = url;
                                                // the filename you want
                                                a.download = oneStepData.filename;
                                                document.body.appendChild(a);
                                                a.click();
                                                window.URL.revokeObjectURL(url);
                                                logContainer.html('Success. Files downloaded.. <br> Generated file url -> ' + oneStepData.exportFile);
                                                logContainer.removeClass('error');
                                                logContainer.addClass('success');
                                            })
                                            .catch(function () {
                                                jQuery('.log-container').html('The file could not be downloaded. Link of the generated file -> ' + oneStepData.exportFile)
                                                logContainer.removeClass('success');
                                                logContainer.addClass('error');
                                            });
                                        jQuery('body').trigger('processStop');
                                    }).fail(function (data) {
                                        logContainer.html(data.responseJSON.message)
                                        logContainer.removeClass('success');
                                        logContainer.addClass('error');
                                        jQuery('body').trigger('processStop');
                                    });
                                }
                            }
                        ],
                        close: function () {
                            self.closeDialogWindow(this);
                        }
                    });
                }
                this.modal.modal('openModal');
            },
            closeDialogWindow: function (dialogWindow) {
                jQuery('body').trigger('processStop');
                dialogWindow.closeModal();
                Windows.overlayShowEffectOptions = this.overlayShowEffectOptions;
                Windows.overlayHideEffectOptions = this.overlayHideEffectOptions;
            }
        };

        window.reporterGenerateModal = reporterGenerateModal;
//]]>
    });
</script>
